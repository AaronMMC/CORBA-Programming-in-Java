# Python stubs generated by omniidl from CORBA_IDLs/AdminService.idl
# DO NOT EDIT THIS FILE!

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA


_omnipy.checkVersion(4,2, __file__, 1)

try:
    property
except NameError:
    def property(*args):
        return None


#
# Start of module "ModifiedHangman"
#
__name__ = "ModifiedHangman"
_0_ModifiedHangman = omniORB.openModule("ModifiedHangman", r"CORBA_IDLs/AdminService.idl")
_0_ModifiedHangman__POA = omniORB.openModule("ModifiedHangman__POA", r"CORBA_IDLs/AdminService.idl")


# exception AdminNotLoggedInException
_0_ModifiedHangman.AdminNotLoggedInException = omniORB.newEmptyClass()
class AdminNotLoggedInException (CORBA.UserException):
    _NP_RepositoryId = "IDL:ModifiedHangman/AdminNotLoggedInException:1.0"

    def __init__(self, message):
        CORBA.UserException.__init__(self, message)
        self.message = message

_0_ModifiedHangman.AdminNotLoggedInException = AdminNotLoggedInException
_0_ModifiedHangman._d_AdminNotLoggedInException  = (omniORB.tcInternal.tv_except, AdminNotLoggedInException, AdminNotLoggedInException._NP_RepositoryId, "AdminNotLoggedInException", "message", (omniORB.tcInternal.tv_string,0))
_0_ModifiedHangman._tc_AdminNotLoggedInException = omniORB.tcInternal.createTypeCode(_0_ModifiedHangman._d_AdminNotLoggedInException)
omniORB.registerType(AdminNotLoggedInException._NP_RepositoryId, _0_ModifiedHangman._d_AdminNotLoggedInException, _0_ModifiedHangman._tc_AdminNotLoggedInException)
del AdminNotLoggedInException

# struct Player
_0_ModifiedHangman.Player = omniORB.newEmptyClass()
class Player (omniORB.StructBase):
    _NP_RepositoryId = "IDL:ModifiedHangman/Player:1.0"

    def __init__(self, username, password, wins):
        self.username = username
        self.password = password
        self.wins = wins

_0_ModifiedHangman.Player = Player
_0_ModifiedHangman._d_Player  = (omniORB.tcInternal.tv_struct, Player, Player._NP_RepositoryId, "Player", "username", (omniORB.tcInternal.tv_string,0), "password", (omniORB.tcInternal.tv_string,0), "wins", omniORB.tcInternal.tv_long)
_0_ModifiedHangman._tc_Player = omniORB.tcInternal.createTypeCode(_0_ModifiedHangman._d_Player)
omniORB.registerType(Player._NP_RepositoryId, _0_ModifiedHangman._d_Player, _0_ModifiedHangman._tc_Player)
del Player

# typedef ... PlayerList
class PlayerList:
    _NP_RepositoryId = "IDL:ModifiedHangman/PlayerList:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_ModifiedHangman.PlayerList = PlayerList
_0_ModifiedHangman._d_PlayerList  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:ModifiedHangman/Player:1.0"], 0)
_0_ModifiedHangman._ad_PlayerList = (omniORB.tcInternal.tv_alias, PlayerList._NP_RepositoryId, "PlayerList", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:ModifiedHangman/Player:1.0"], 0))
_0_ModifiedHangman._tc_PlayerList = omniORB.tcInternal.createTypeCode(_0_ModifiedHangman._ad_PlayerList)
omniORB.registerType(PlayerList._NP_RepositoryId, _0_ModifiedHangman._ad_PlayerList, _0_ModifiedHangman._tc_PlayerList)
del PlayerList

# interface AdminService
_0_ModifiedHangman._d_AdminService = (omniORB.tcInternal.tv_objref, "IDL:ModifiedHangman/AdminService:1.0", "AdminService")
omniORB.typeMapping["IDL:ModifiedHangman/AdminService:1.0"] = _0_ModifiedHangman._d_AdminService
_0_ModifiedHangman.AdminService = omniORB.newEmptyClass()
class AdminService :
    _NP_RepositoryId = _0_ModifiedHangman._d_AdminService[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_ModifiedHangman.AdminService = AdminService
_0_ModifiedHangman._tc_AdminService = omniORB.tcInternal.createTypeCode(_0_ModifiedHangman._d_AdminService)
omniORB.registerType(AdminService._NP_RepositoryId, _0_ModifiedHangman._d_AdminService, _0_ModifiedHangman._tc_AdminService)

# AdminService operations and attributes
AdminService._d_create_player = (((omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0)), (), {_0_ModifiedHangman.AdminNotLoggedInException._NP_RepositoryId: _0_ModifiedHangman._d_AdminNotLoggedInException})
AdminService._d_update_player = (((omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0)), (), {_0_ModifiedHangman.AdminNotLoggedInException._NP_RepositoryId: _0_ModifiedHangman._d_AdminNotLoggedInException})
AdminService._d_delete_player = (((omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0)), (), {_0_ModifiedHangman.AdminNotLoggedInException._NP_RepositoryId: _0_ModifiedHangman._d_AdminNotLoggedInException})
AdminService._d_search_player = (((omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0)), (omniORB.typeMapping["IDL:ModifiedHangman/Player:1.0"], ), {_0_ModifiedHangman.AdminNotLoggedInException._NP_RepositoryId: _0_ModifiedHangman._d_AdminNotLoggedInException})
AdminService._d_get_all_player = (((omniORB.tcInternal.tv_string,0), ), (omniORB.typeMapping["IDL:ModifiedHangman/PlayerList:1.0"], ), {_0_ModifiedHangman.AdminNotLoggedInException._NP_RepositoryId: _0_ModifiedHangman._d_AdminNotLoggedInException})
AdminService._d_set_waiting_time = ((omniORB.tcInternal.tv_long, (omniORB.tcInternal.tv_string,0)), (), {_0_ModifiedHangman.AdminNotLoggedInException._NP_RepositoryId: _0_ModifiedHangman._d_AdminNotLoggedInException})
AdminService._d_set_round_duration = ((omniORB.tcInternal.tv_long, (omniORB.tcInternal.tv_string,0)), (), {_0_ModifiedHangman.AdminNotLoggedInException._NP_RepositoryId: _0_ModifiedHangman._d_AdminNotLoggedInException})
AdminService._d_get_waiting_time = (((omniORB.tcInternal.tv_string,0), ), (omniORB.tcInternal.tv_long, ), {_0_ModifiedHangman.AdminNotLoggedInException._NP_RepositoryId: _0_ModifiedHangman._d_AdminNotLoggedInException})
AdminService._d_get_round_duration = (((omniORB.tcInternal.tv_string,0), ), (omniORB.tcInternal.tv_long, ), {_0_ModifiedHangman.AdminNotLoggedInException._NP_RepositoryId: _0_ModifiedHangman._d_AdminNotLoggedInException})

# AdminService object reference
class _objref_AdminService (CORBA.Object):
    _NP_RepositoryId = AdminService._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def create_player(self, *args):
        return self._obj.invoke("create_player", _0_ModifiedHangman.AdminService._d_create_player, args)

    def update_player(self, *args):
        return self._obj.invoke("update_player", _0_ModifiedHangman.AdminService._d_update_player, args)

    def delete_player(self, *args):
        return self._obj.invoke("delete_player", _0_ModifiedHangman.AdminService._d_delete_player, args)

    def search_player(self, *args):
        return self._obj.invoke("search_player", _0_ModifiedHangman.AdminService._d_search_player, args)

    def get_all_player(self, *args):
        return self._obj.invoke("get_all_player", _0_ModifiedHangman.AdminService._d_get_all_player, args)

    def set_waiting_time(self, *args):
        return self._obj.invoke("set_waiting_time", _0_ModifiedHangman.AdminService._d_set_waiting_time, args)

    def set_round_duration(self, *args):
        return self._obj.invoke("set_round_duration", _0_ModifiedHangman.AdminService._d_set_round_duration, args)

    def get_waiting_time(self, *args):
        return self._obj.invoke("get_waiting_time", _0_ModifiedHangman.AdminService._d_get_waiting_time, args)

    def get_round_duration(self, *args):
        return self._obj.invoke("get_round_duration", _0_ModifiedHangman.AdminService._d_get_round_duration, args)

omniORB.registerObjref(AdminService._NP_RepositoryId, _objref_AdminService)
_0_ModifiedHangman._objref_AdminService = _objref_AdminService
del AdminService, _objref_AdminService

# AdminService skeleton
__name__ = "ModifiedHangman__POA"
class AdminService (PortableServer.Servant):
    _NP_RepositoryId = _0_ModifiedHangman.AdminService._NP_RepositoryId


    _omni_op_d = {"create_player": _0_ModifiedHangman.AdminService._d_create_player, "update_player": _0_ModifiedHangman.AdminService._d_update_player, "delete_player": _0_ModifiedHangman.AdminService._d_delete_player, "search_player": _0_ModifiedHangman.AdminService._d_search_player, "get_all_player": _0_ModifiedHangman.AdminService._d_get_all_player, "set_waiting_time": _0_ModifiedHangman.AdminService._d_set_waiting_time, "set_round_duration": _0_ModifiedHangman.AdminService._d_set_round_duration, "get_waiting_time": _0_ModifiedHangman.AdminService._d_get_waiting_time, "get_round_duration": _0_ModifiedHangman.AdminService._d_get_round_duration}

AdminService._omni_skeleton = AdminService
_0_ModifiedHangman__POA.AdminService = AdminService
omniORB.registerSkeleton(AdminService._NP_RepositoryId, AdminService)
del AdminService
__name__ = "ModifiedHangman"

#
# End of module "ModifiedHangman"
#
__name__ = "AdminService_idl"

_exported_modules = ( "ModifiedHangman", )

# The end.
