# Python stubs generated by omniidl from CORBA_IDLs\AuthenticationService.idl
# DO NOT EDIT THIS FILE!

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA


_omnipy.checkVersion(4,2, __file__, 1)

try:
    property
except NameError:
    def property(*args):
        return None


#
# Start of module "ModifiedHangman"
#
__name__ = "ModifiedHangman"
_0_ModifiedHangman = omniORB.openModule("ModifiedHangman", r"CORBA_IDLs\AuthenticationService.idl")
_0_ModifiedHangman__POA = omniORB.openModule("ModifiedHangman__POA", r"CORBA_IDLs\AuthenticationService.idl")


# exception LogInException
_0_ModifiedHangman.LogInException = omniORB.newEmptyClass()
class LogInException (CORBA.UserException):
    _NP_RepositoryId = "IDL:ModifiedHangman/LogInException:1.0"

    def __init__(self, message):
        CORBA.UserException.__init__(self, message)
        self.message = message

_0_ModifiedHangman.LogInException = LogInException
_0_ModifiedHangman._d_LogInException  = (omniORB.tcInternal.tv_except, LogInException, LogInException._NP_RepositoryId, "LogInException", "message", (omniORB.tcInternal.tv_string,0))
_0_ModifiedHangman._tc_LogInException = omniORB.tcInternal.createTypeCode(_0_ModifiedHangman._d_LogInException)
omniORB.registerType(LogInException._NP_RepositoryId, _0_ModifiedHangman._d_LogInException, _0_ModifiedHangman._tc_LogInException)
del LogInException

# exception PlayerNotLoggedInException
_0_ModifiedHangman.PlayerNotLoggedInException = omniORB.newEmptyClass()
class PlayerNotLoggedInException (CORBA.UserException):
    _NP_RepositoryId = "IDL:ModifiedHangman/PlayerNotLoggedInException:1.0"

    def __init__(self, message):
        CORBA.UserException.__init__(self, message)
        self.message = message

_0_ModifiedHangman.PlayerNotLoggedInException = PlayerNotLoggedInException
_0_ModifiedHangman._d_PlayerNotLoggedInException  = (omniORB.tcInternal.tv_except, PlayerNotLoggedInException, PlayerNotLoggedInException._NP_RepositoryId, "PlayerNotLoggedInException", "message", (omniORB.tcInternal.tv_string,0))
_0_ModifiedHangman._tc_PlayerNotLoggedInException = omniORB.tcInternal.createTypeCode(_0_ModifiedHangman._d_PlayerNotLoggedInException)
omniORB.registerType(PlayerNotLoggedInException._NP_RepositoryId, _0_ModifiedHangman._d_PlayerNotLoggedInException, _0_ModifiedHangman._tc_PlayerNotLoggedInException)
del PlayerNotLoggedInException

# interface ClientCallback
_0_ModifiedHangman._d_ClientCallback = (omniORB.tcInternal.tv_objref, "IDL:ModifiedHangman/ClientCallback:1.0", "ClientCallback")
omniORB.typeMapping["IDL:ModifiedHangman/ClientCallback:1.0"] = _0_ModifiedHangman._d_ClientCallback
_0_ModifiedHangman.ClientCallback = omniORB.newEmptyClass()
class ClientCallback :
    _NP_RepositoryId = _0_ModifiedHangman._d_ClientCallback[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_ModifiedHangman.ClientCallback = ClientCallback
_0_ModifiedHangman._tc_ClientCallback = omniORB.tcInternal.createTypeCode(_0_ModifiedHangman._d_ClientCallback)
omniORB.registerType(ClientCallback._NP_RepositoryId, _0_ModifiedHangman._d_ClientCallback, _0_ModifiedHangman._tc_ClientCallback)

# ClientCallback operations and attributes
ClientCallback._d_notify = (((omniORB.tcInternal.tv_string,0), ), (), None)

# ClientCallback object reference
class _objref_ClientCallback (CORBA.Object):
    _NP_RepositoryId = ClientCallback._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def notify(self, *args):
        return self._obj.invoke("notify", _0_ModifiedHangman.ClientCallback._d_notify, args)

omniORB.registerObjref(ClientCallback._NP_RepositoryId, _objref_ClientCallback)
_0_ModifiedHangman._objref_ClientCallback = _objref_ClientCallback
del ClientCallback, _objref_ClientCallback

# ClientCallback skeleton
__name__ = "ModifiedHangman__POA"
class ClientCallback (PortableServer.Servant):
    _NP_RepositoryId = _0_ModifiedHangman.ClientCallback._NP_RepositoryId


    _omni_op_d = {"notify": _0_ModifiedHangman.ClientCallback._d_notify}

ClientCallback._omni_skeleton = ClientCallback
_0_ModifiedHangman__POA.ClientCallback = ClientCallback
omniORB.registerSkeleton(ClientCallback._NP_RepositoryId, ClientCallback)
del ClientCallback
__name__ = "ModifiedHangman"

# interface AuthenticationService
_0_ModifiedHangman._d_AuthenticationService = (omniORB.tcInternal.tv_objref, "IDL:ModifiedHangman/AuthenticationService:1.0", "AuthenticationService")
omniORB.typeMapping["IDL:ModifiedHangman/AuthenticationService:1.0"] = _0_ModifiedHangman._d_AuthenticationService
_0_ModifiedHangman.AuthenticationService = omniORB.newEmptyClass()
class AuthenticationService :
    _NP_RepositoryId = _0_ModifiedHangman._d_AuthenticationService[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_ModifiedHangman.AuthenticationService = AuthenticationService
_0_ModifiedHangman._tc_AuthenticationService = omniORB.tcInternal.createTypeCode(_0_ModifiedHangman._d_AuthenticationService)
omniORB.registerType(AuthenticationService._NP_RepositoryId, _0_ModifiedHangman._d_AuthenticationService, _0_ModifiedHangman._tc_AuthenticationService)

# AuthenticationService operations and attributes
AuthenticationService._d_login = (((omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0)), ((omniORB.tcInternal.tv_string,0), ), {_0_ModifiedHangman.LogInException._NP_RepositoryId: _0_ModifiedHangman._d_LogInException})
AuthenticationService._d_logout = (((omniORB.tcInternal.tv_string,0), ), (), {_0_ModifiedHangman.PlayerNotLoggedInException._NP_RepositoryId: _0_ModifiedHangman._d_PlayerNotLoggedInException})
AuthenticationService._d_registerCallback = ((omniORB.typeMapping["IDL:ModifiedHangman/ClientCallback:1.0"], (omniORB.tcInternal.tv_string,0)), (), {_0_ModifiedHangman.PlayerNotLoggedInException._NP_RepositoryId: _0_ModifiedHangman._d_PlayerNotLoggedInException})

# AuthenticationService object reference
class _objref_AuthenticationService (CORBA.Object):
    _NP_RepositoryId = AuthenticationService._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def login(self, *args):
        return self._obj.invoke("login", _0_ModifiedHangman.AuthenticationService._d_login, args)

    def logout(self, *args):
        return self._obj.invoke("logout", _0_ModifiedHangman.AuthenticationService._d_logout, args)

    def registerCallback(self, *args):
        return self._obj.invoke("registerCallback", _0_ModifiedHangman.AuthenticationService._d_registerCallback, args)

omniORB.registerObjref(AuthenticationService._NP_RepositoryId, _objref_AuthenticationService)
_0_ModifiedHangman._objref_AuthenticationService = _objref_AuthenticationService
del AuthenticationService, _objref_AuthenticationService

# AuthenticationService skeleton
__name__ = "ModifiedHangman__POA"
class AuthenticationService (PortableServer.Servant):
    _NP_RepositoryId = _0_ModifiedHangman.AuthenticationService._NP_RepositoryId


    _omni_op_d = {"login": _0_ModifiedHangman.AuthenticationService._d_login, "logout": _0_ModifiedHangman.AuthenticationService._d_logout, "registerCallback": _0_ModifiedHangman.AuthenticationService._d_registerCallback}

AuthenticationService._omni_skeleton = AuthenticationService
_0_ModifiedHangman__POA.AuthenticationService = AuthenticationService
omniORB.registerSkeleton(AuthenticationService._NP_RepositoryId, AuthenticationService)
del AuthenticationService
__name__ = "ModifiedHangman"

#
# End of module "ModifiedHangman"
#
__name__ = "AuthenticationService_idl"

_exported_modules = ( "ModifiedHangman", )

# The end.
