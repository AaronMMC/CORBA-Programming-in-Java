# Python stubs generated by omniidl from CORBA_IDLs\GameService.idl
# DO NOT EDIT THIS FILE!

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA


_omnipy.checkVersion(4,2, __file__, 1)

try:
    property
except NameError:
    def property(*args):
        return None


#
# Start of module "ModifiedHangman"
#
__name__ = "ModifiedHangman"
_0_ModifiedHangman = omniORB.openModule("ModifiedHangman", r"CORBA_IDLs\GameService.idl")
_0_ModifiedHangman__POA = omniORB.openModule("ModifiedHangman__POA", r"CORBA_IDLs\GameService.idl")


# exception GameNotFoundException
_0_ModifiedHangman.GameNotFoundException = omniORB.newEmptyClass()
class GameNotFoundException (CORBA.UserException):
    _NP_RepositoryId = "IDL:ModifiedHangman/GameNotFoundException:1.0"

    def __init__(self, message):
        CORBA.UserException.__init__(self, message)
        self.message = message

_0_ModifiedHangman.GameNotFoundException = GameNotFoundException
_0_ModifiedHangman._d_GameNotFoundException  = (omniORB.tcInternal.tv_except, GameNotFoundException, GameNotFoundException._NP_RepositoryId, "GameNotFoundException", "message", (omniORB.tcInternal.tv_string,0))
_0_ModifiedHangman._tc_GameNotFoundException = omniORB.tcInternal.createTypeCode(_0_ModifiedHangman._d_GameNotFoundException)
omniORB.registerType(GameNotFoundException._NP_RepositoryId, _0_ModifiedHangman._d_GameNotFoundException, _0_ModifiedHangman._tc_GameNotFoundException)
del GameNotFoundException

# exception PlayerNotLoggedInException
_0_ModifiedHangman.PlayerNotLoggedInException = omniORB.newEmptyClass()
class PlayerNotLoggedInException (CORBA.UserException):
    _NP_RepositoryId = "IDL:ModifiedHangman/PlayerNotLoggedInException:1.0"

    def __init__(self, message):
        CORBA.UserException.__init__(self, message)
        self.message = message

_0_ModifiedHangman.PlayerNotLoggedInException = PlayerNotLoggedInException
_0_ModifiedHangman._d_PlayerNotLoggedInException  = (omniORB.tcInternal.tv_except, PlayerNotLoggedInException, PlayerNotLoggedInException._NP_RepositoryId, "PlayerNotLoggedInException", "message", (omniORB.tcInternal.tv_string,0))
_0_ModifiedHangman._tc_PlayerNotLoggedInException = omniORB.tcInternal.createTypeCode(_0_ModifiedHangman._d_PlayerNotLoggedInException)
omniORB.registerType(PlayerNotLoggedInException._NP_RepositoryId, _0_ModifiedHangman._d_PlayerNotLoggedInException, _0_ModifiedHangman._tc_PlayerNotLoggedInException)
del PlayerNotLoggedInException

# struct GamePlayer
_0_ModifiedHangman.GamePlayer = omniORB.newEmptyClass()
class GamePlayer (omniORB.StructBase):
    _NP_RepositoryId = "IDL:ModifiedHangman/GamePlayer:1.0"

    def __init__(self, username, wins):
        self.username = username
        self.wins = wins

_0_ModifiedHangman.GamePlayer = GamePlayer
_0_ModifiedHangman._d_GamePlayer  = (omniORB.tcInternal.tv_struct, GamePlayer, GamePlayer._NP_RepositoryId, "GamePlayer", "username", (omniORB.tcInternal.tv_string,0), "wins", omniORB.tcInternal.tv_long)
_0_ModifiedHangman._tc_GamePlayer = omniORB.tcInternal.createTypeCode(_0_ModifiedHangman._d_GamePlayer)
omniORB.registerType(GamePlayer._NP_RepositoryId, _0_ModifiedHangman._d_GamePlayer, _0_ModifiedHangman._tc_GamePlayer)
del GamePlayer

# struct GameResult
_0_ModifiedHangman.GameResult = omniORB.newEmptyClass()
class GameResult (omniORB.StructBase):
    _NP_RepositoryId = "IDL:ModifiedHangman/GameResult:1.0"

    def __init__(self, gameId, gameWinner, leaderboard):
        self.gameId = gameId
        self.gameWinner = gameWinner
        self.leaderboard = leaderboard

_0_ModifiedHangman.GameResult = GameResult
_0_ModifiedHangman._d_GameResult  = (omniORB.tcInternal.tv_struct, GameResult, GameResult._NP_RepositoryId, "GameResult", "gameId", (omniORB.tcInternal.tv_string,0), "gameWinner", (omniORB.tcInternal.tv_string,0), "leaderboard", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:ModifiedHangman/GamePlayer:1.0"], 0))
_0_ModifiedHangman._tc_GameResult = omniORB.tcInternal.createTypeCode(_0_ModifiedHangman._d_GameResult)
omniORB.registerType(GameResult._NP_RepositoryId, _0_ModifiedHangman._d_GameResult, _0_ModifiedHangman._tc_GameResult)
del GameResult

# struct RoundResult
_0_ModifiedHangman.RoundResult = omniORB.newEmptyClass()
class RoundResult (omniORB.StructBase):
    _NP_RepositoryId = "IDL:ModifiedHangman/RoundResult:1.0"

    def __init__(self, gameId, roundNumber, roundWinner, wordToGuess, statusMessage, currentGameLeaderboard):
        self.gameId = gameId
        self.roundNumber = roundNumber
        self.roundWinner = roundWinner
        self.wordToGuess = wordToGuess
        self.statusMessage = statusMessage
        self.currentGameLeaderboard = currentGameLeaderboard

_0_ModifiedHangman.RoundResult = RoundResult
_0_ModifiedHangman._d_RoundResult  = (omniORB.tcInternal.tv_struct, RoundResult, RoundResult._NP_RepositoryId, "RoundResult", "gameId", (omniORB.tcInternal.tv_string,0), "roundNumber", omniORB.tcInternal.tv_long, "roundWinner", omniORB.typeMapping["IDL:ModifiedHangman/GamePlayer:1.0"], "wordToGuess", (omniORB.tcInternal.tv_string,0), "statusMessage", (omniORB.tcInternal.tv_string,0), "currentGameLeaderboard", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:ModifiedHangman/GamePlayer:1.0"], 0))
_0_ModifiedHangman._tc_RoundResult = omniORB.tcInternal.createTypeCode(_0_ModifiedHangman._d_RoundResult)
omniORB.registerType(RoundResult._NP_RepositoryId, _0_ModifiedHangman._d_RoundResult, _0_ModifiedHangman._tc_RoundResult)
del RoundResult

# interface ClientCallback
_0_ModifiedHangman._d_ClientCallback = (omniORB.tcInternal.tv_objref, "IDL:ModifiedHangman/ClientCallback:1.0", "ClientCallback")
omniORB.typeMapping["IDL:ModifiedHangman/ClientCallback:1.0"] = _0_ModifiedHangman._d_ClientCallback
_0_ModifiedHangman.ClientCallback = omniORB.newEmptyClass()
class ClientCallback :
    _NP_RepositoryId = _0_ModifiedHangman._d_ClientCallback[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_ModifiedHangman.ClientCallback = ClientCallback
_0_ModifiedHangman._tc_ClientCallback = omniORB.tcInternal.createTypeCode(_0_ModifiedHangman._d_ClientCallback)
omniORB.registerType(ClientCallback._NP_RepositoryId, _0_ModifiedHangman._d_ClientCallback, _0_ModifiedHangman._tc_ClientCallback)

# ClientCallback operations and attributes
ClientCallback._d_startRound = ((omniORB.tcInternal.tv_long, omniORB.tcInternal.tv_long), (), None)
ClientCallback._d_startGameFailed = ((), (), None)
ClientCallback._d_endGame = ((omniORB.typeMapping["IDL:ModifiedHangman/GameResult:1.0"], ), (), None)
ClientCallback._d_endRound = ((omniORB.typeMapping["IDL:ModifiedHangman/RoundResult:1.0"], ), (), None)
ClientCallback._d_proceedToNextRound = ((omniORB.tcInternal.tv_long, omniORB.tcInternal.tv_long), (), None)

# ClientCallback object reference
class _objref_ClientCallback (CORBA.Object):
    _NP_RepositoryId = ClientCallback._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def startRound(self, *args):
        return self._obj.invoke("startRound", _0_ModifiedHangman.ClientCallback._d_startRound, args)

    def startGameFailed(self, *args):
        return self._obj.invoke("startGameFailed", _0_ModifiedHangman.ClientCallback._d_startGameFailed, args)

    def endGame(self, *args):
        return self._obj.invoke("endGame", _0_ModifiedHangman.ClientCallback._d_endGame, args)

    def endRound(self, *args):
        return self._obj.invoke("endRound", _0_ModifiedHangman.ClientCallback._d_endRound, args)

    def proceedToNextRound(self, *args):
        return self._obj.invoke("proceedToNextRound", _0_ModifiedHangman.ClientCallback._d_proceedToNextRound, args)

omniORB.registerObjref(ClientCallback._NP_RepositoryId, _objref_ClientCallback)
_0_ModifiedHangman._objref_ClientCallback = _objref_ClientCallback
del ClientCallback, _objref_ClientCallback

# ClientCallback skeleton
__name__ = "ModifiedHangman__POA"
class ClientCallback (PortableServer.Servant):
    _NP_RepositoryId = _0_ModifiedHangman.ClientCallback._NP_RepositoryId


    _omni_op_d = {"startRound": _0_ModifiedHangman.ClientCallback._d_startRound, "startGameFailed": _0_ModifiedHangman.ClientCallback._d_startGameFailed, "endGame": _0_ModifiedHangman.ClientCallback._d_endGame, "endRound": _0_ModifiedHangman.ClientCallback._d_endRound, "proceedToNextRound": _0_ModifiedHangman.ClientCallback._d_proceedToNextRound}

ClientCallback._omni_skeleton = ClientCallback
_0_ModifiedHangman__POA.ClientCallback = ClientCallback
omniORB.registerSkeleton(ClientCallback._NP_RepositoryId, ClientCallback)
del ClientCallback
__name__ = "ModifiedHangman"

# struct Player
_0_ModifiedHangman.Player = omniORB.newEmptyClass()
class Player (omniORB.StructBase):
    _NP_RepositoryId = "IDL:ModifiedHangman/Player:1.0"

    def __init__(self, username, password, wins):
        self.username = username
        self.password = password
        self.wins = wins

_0_ModifiedHangman.Player = Player
_0_ModifiedHangman._d_Player  = (omniORB.tcInternal.tv_struct, Player, Player._NP_RepositoryId, "Player", "username", (omniORB.tcInternal.tv_string,0), "password", (omniORB.tcInternal.tv_string,0), "wins", omniORB.tcInternal.tv_long)
_0_ModifiedHangman._tc_Player = omniORB.tcInternal.createTypeCode(_0_ModifiedHangman._d_Player)
omniORB.registerType(Player._NP_RepositoryId, _0_ModifiedHangman._d_Player, _0_ModifiedHangman._tc_Player)
del Player

# struct AttemptedLetter
_0_ModifiedHangman.AttemptedLetter = omniORB.newEmptyClass()
class AttemptedLetter (omniORB.StructBase):
    _NP_RepositoryId = "IDL:ModifiedHangman/AttemptedLetter:1.0"

    def __init__(self, letter, isLetterCorrect):
        self.letter = letter
        self.isLetterCorrect = isLetterCorrect

_0_ModifiedHangman.AttemptedLetter = AttemptedLetter
_0_ModifiedHangman._d_AttemptedLetter  = (omniORB.tcInternal.tv_struct, AttemptedLetter, AttemptedLetter._NP_RepositoryId, "AttemptedLetter", "letter", omniORB.tcInternal.tv_char, "isLetterCorrect", omniORB.tcInternal.tv_boolean)
_0_ModifiedHangman._tc_AttemptedLetter = omniORB.tcInternal.createTypeCode(_0_ModifiedHangman._d_AttemptedLetter)
omniORB.registerType(AttemptedLetter._NP_RepositoryId, _0_ModifiedHangman._d_AttemptedLetter, _0_ModifiedHangman._tc_AttemptedLetter)
del AttemptedLetter

# struct GuessResponse
_0_ModifiedHangman.GuessResponse = omniORB.newEmptyClass()
class GuessResponse (omniORB.StructBase):
    _NP_RepositoryId = "IDL:ModifiedHangman/GuessResponse:1.0"

    def __init__(self, isWordGuessed, maskedWord, attemptedLetters, remainingAttemptsLeft):
        self.isWordGuessed = isWordGuessed
        self.maskedWord = maskedWord
        self.attemptedLetters = attemptedLetters
        self.remainingAttemptsLeft = remainingAttemptsLeft

_0_ModifiedHangman.GuessResponse = GuessResponse
_0_ModifiedHangman._d_GuessResponse  = (omniORB.tcInternal.tv_struct, GuessResponse, GuessResponse._NP_RepositoryId, "GuessResponse", "isWordGuessed", omniORB.tcInternal.tv_boolean, "maskedWord", (omniORB.tcInternal.tv_string,0), "attemptedLetters", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:ModifiedHangman/AttemptedLetter:1.0"], 0), "remainingAttemptsLeft", omniORB.tcInternal.tv_long)
_0_ModifiedHangman._tc_GuessResponse = omniORB.tcInternal.createTypeCode(_0_ModifiedHangman._d_GuessResponse)
omniORB.registerType(GuessResponse._NP_RepositoryId, _0_ModifiedHangman._d_GuessResponse, _0_ModifiedHangman._tc_GuessResponse)
del GuessResponse

# struct GameInfo
_0_ModifiedHangman.GameInfo = omniORB.newEmptyClass()
class GameInfo (omniORB.StructBase):
    _NP_RepositoryId = "IDL:ModifiedHangman/GameInfo:1.0"

    def __init__(self, gameId, roundLength, remainingWaitingTime):
        self.gameId = gameId
        self.roundLength = roundLength
        self.remainingWaitingTime = remainingWaitingTime

_0_ModifiedHangman.GameInfo = GameInfo
_0_ModifiedHangman._d_GameInfo  = (omniORB.tcInternal.tv_struct, GameInfo, GameInfo._NP_RepositoryId, "GameInfo", "gameId", (omniORB.tcInternal.tv_string,0), "roundLength", omniORB.tcInternal.tv_long, "remainingWaitingTime", omniORB.tcInternal.tv_long)
_0_ModifiedHangman._tc_GameInfo = omniORB.tcInternal.createTypeCode(_0_ModifiedHangman._d_GameInfo)
omniORB.registerType(GameInfo._NP_RepositoryId, _0_ModifiedHangman._d_GameInfo, _0_ModifiedHangman._tc_GameInfo)
del GameInfo

# struct Leaderboard
_0_ModifiedHangman.Leaderboard = omniORB.newEmptyClass()
class Leaderboard (omniORB.StructBase):
    _NP_RepositoryId = "IDL:ModifiedHangman/Leaderboard:1.0"

    def __init__(self, players):
        self.players = players

_0_ModifiedHangman.Leaderboard = Leaderboard
_0_ModifiedHangman._d_Leaderboard  = (omniORB.tcInternal.tv_struct, Leaderboard, Leaderboard._NP_RepositoryId, "Leaderboard", "players", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:ModifiedHangman/GamePlayer:1.0"], 0))
_0_ModifiedHangman._tc_Leaderboard = omniORB.tcInternal.createTypeCode(_0_ModifiedHangman._d_Leaderboard)
omniORB.registerType(Leaderboard._NP_RepositoryId, _0_ModifiedHangman._d_Leaderboard, _0_ModifiedHangman._tc_Leaderboard)
del Leaderboard

# interface GameService
_0_ModifiedHangman._d_GameService = (omniORB.tcInternal.tv_objref, "IDL:ModifiedHangman/GameService:1.0", "GameService")
omniORB.typeMapping["IDL:ModifiedHangman/GameService:1.0"] = _0_ModifiedHangman._d_GameService
_0_ModifiedHangman.GameService = omniORB.newEmptyClass()
class GameService :
    _NP_RepositoryId = _0_ModifiedHangman._d_GameService[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_ModifiedHangman.GameService = GameService
_0_ModifiedHangman._tc_GameService = omniORB.tcInternal.createTypeCode(_0_ModifiedHangman._d_GameService)
omniORB.registerType(GameService._NP_RepositoryId, _0_ModifiedHangman._d_GameService, _0_ModifiedHangman._tc_GameService)

# GameService operations and attributes
GameService._d_registerCallback = ((omniORB.typeMapping["IDL:ModifiedHangman/ClientCallback:1.0"], (omniORB.tcInternal.tv_string,0)), (), {_0_ModifiedHangman.PlayerNotLoggedInException._NP_RepositoryId: _0_ModifiedHangman._d_PlayerNotLoggedInException})
GameService._d_start_game = (((omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0)), (omniORB.typeMapping["IDL:ModifiedHangman/GameInfo:1.0"], ), {_0_ModifiedHangman.PlayerNotLoggedInException._NP_RepositoryId: _0_ModifiedHangman._d_PlayerNotLoggedInException})
GameService._d_guessLetter = (((omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0), omniORB.tcInternal.tv_char, (omniORB.tcInternal.tv_string,0)), (omniORB.typeMapping["IDL:ModifiedHangman/GuessResponse:1.0"], ), {_0_ModifiedHangman.GameNotFoundException._NP_RepositoryId: _0_ModifiedHangman._d_GameNotFoundException, _0_ModifiedHangman.PlayerNotLoggedInException._NP_RepositoryId: _0_ModifiedHangman._d_PlayerNotLoggedInException})
GameService._d_get_leaderboard = (((omniORB.tcInternal.tv_string,0), ), (omniORB.typeMapping["IDL:ModifiedHangman/Leaderboard:1.0"], ), {_0_ModifiedHangman.PlayerNotLoggedInException._NP_RepositoryId: _0_ModifiedHangman._d_PlayerNotLoggedInException})

# GameService object reference
class _objref_GameService (CORBA.Object):
    _NP_RepositoryId = GameService._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def registerCallback(self, *args):
        return self._obj.invoke("registerCallback", _0_ModifiedHangman.GameService._d_registerCallback, args)

    def start_game(self, *args):
        return self._obj.invoke("start_game", _0_ModifiedHangman.GameService._d_start_game, args)

    def guessLetter(self, *args):
        return self._obj.invoke("guessLetter", _0_ModifiedHangman.GameService._d_guessLetter, args)

    def get_leaderboard(self, *args):
        return self._obj.invoke("get_leaderboard", _0_ModifiedHangman.GameService._d_get_leaderboard, args)

omniORB.registerObjref(GameService._NP_RepositoryId, _objref_GameService)
_0_ModifiedHangman._objref_GameService = _objref_GameService
del GameService, _objref_GameService

# GameService skeleton
__name__ = "ModifiedHangman__POA"
class GameService (PortableServer.Servant):
    _NP_RepositoryId = _0_ModifiedHangman.GameService._NP_RepositoryId


    _omni_op_d = {"registerCallback": _0_ModifiedHangman.GameService._d_registerCallback, "start_game": _0_ModifiedHangman.GameService._d_start_game, "guessLetter": _0_ModifiedHangman.GameService._d_guessLetter, "get_leaderboard": _0_ModifiedHangman.GameService._d_get_leaderboard}

GameService._omni_skeleton = GameService
_0_ModifiedHangman__POA.GameService = GameService
omniORB.registerSkeleton(GameService._NP_RepositoryId, GameService)
del GameService
__name__ = "ModifiedHangman"

#
# End of module "ModifiedHangman"
#
__name__ = "GameService_idl"

_exported_modules = ( "ModifiedHangman", )

# The end.
