package ModifiedHangman;


/**
 * ModifiedHangman/_ClientCallbackStub.java .
 * Generated by the IDL-to-Java compiler (portable), version "3.2"
 * from ModifiedHangman/GameService.idl
 * Thursday, May 15, 2025 9:19:59 PM SGT
 */

public class _ClientCallbackStub extends org.omg.CORBA.portable.ObjectImpl implements ModifiedHangman.ClientCallback
{

    public void startRound (int wordLength, int roundNumber)
    {
        org.omg.CORBA.portable.InputStream $in = null;
        try {
            org.omg.CORBA.portable.OutputStream $out = _request ("startRound", true);
            $out.write_long (wordLength);
            $out.write_long (roundNumber);
            $in = _invoke ($out);
            return;
        } catch (org.omg.CORBA.portable.ApplicationException $ex) {
            $in = $ex.getInputStream ();
            String _id = $ex.getId ();
            throw new org.omg.CORBA.MARSHAL (_id);
        } catch (org.omg.CORBA.portable.RemarshalException $rm) {
            startRound (wordLength, roundNumber        );
        } finally {
            _releaseReply ($in);
        }
    } // startRound

    public void startGameFailed ()
    {
        org.omg.CORBA.portable.InputStream $in = null;
        try {
            org.omg.CORBA.portable.OutputStream $out = _request ("startGameFailed", true);
            $in = _invoke ($out);
            return;
        } catch (org.omg.CORBA.portable.ApplicationException $ex) {
            $in = $ex.getInputStream ();
            String _id = $ex.getId ();
            throw new org.omg.CORBA.MARSHAL (_id);
        } catch (org.omg.CORBA.portable.RemarshalException $rm) {
            startGameFailed (        );
        } finally {
            _releaseReply ($in);
        }
    } // startGameFailed

    public void endGame (ModifiedHangman.GameResult gameResult)
    {
        org.omg.CORBA.portable.InputStream $in = null;
        try {
            org.omg.CORBA.portable.OutputStream $out = _request ("endGame", true);
            ModifiedHangman.GameResultHelper.write ($out, gameResult);
            $in = _invoke ($out);
            return;
        } catch (org.omg.CORBA.portable.ApplicationException $ex) {
            $in = $ex.getInputStream ();
            String _id = $ex.getId ();
            throw new org.omg.CORBA.MARSHAL (_id);
        } catch (org.omg.CORBA.portable.RemarshalException $rm) {
            endGame (gameResult        );
        } finally {
            _releaseReply ($in);
        }
    } // endGame

    public void endRound (ModifiedHangman.RoundResult roundResult)
    {
        org.omg.CORBA.portable.InputStream $in = null;
        try {
            org.omg.CORBA.portable.OutputStream $out = _request ("endRound", true);
            ModifiedHangman.RoundResultHelper.write ($out, roundResult);
            $in = _invoke ($out);
            return;
        } catch (org.omg.CORBA.portable.ApplicationException $ex) {
            $in = $ex.getInputStream ();
            String _id = $ex.getId ();
            throw new org.omg.CORBA.MARSHAL (_id);
        } catch (org.omg.CORBA.portable.RemarshalException $rm) {
            endRound (roundResult        );
        } finally {
            _releaseReply ($in);
        }
    } // endRound

    public void proceedToNextRound (int wordLength)
    {
        org.omg.CORBA.portable.InputStream $in = null;
        try {
            org.omg.CORBA.portable.OutputStream $out = _request ("proceedToNextRound", true);
            $out.write_long (wordLength);
            $in = _invoke ($out);
            return;
        } catch (org.omg.CORBA.portable.ApplicationException $ex) {
            $in = $ex.getInputStream ();
            String _id = $ex.getId ();
            throw new org.omg.CORBA.MARSHAL (_id);
        } catch (org.omg.CORBA.portable.RemarshalException $rm) {
            proceedToNextRound (wordLength        );
        } finally {
            _releaseReply ($in);
        }
    } // proceedToNextRound

    public void notifySessionInvalidated (String reason) // New method in the stub
    {
        org.omg.CORBA.portable.InputStream $in = null;
        try {
            org.omg.CORBA.portable.OutputStream $out = _request ("notifySessionInvalidated", true);
            $out.write_string (reason);
            $in = _invoke ($out);
            return;
        } catch (org.omg.CORBA.portable.ApplicationException $ex) {
            $in = $ex.getInputStream ();
            String _id = $ex.getId ();
            throw new org.omg.CORBA.MARSHAL (_id);
        } catch (org.omg.CORBA.portable.RemarshalException $rm) {
            notifySessionInvalidated (reason        );
        } finally {
            _releaseReply ($in);
        }
    } // notifySessionInvalidated

    // Type-specific CORBA::Object operations
    private static String[] __ids = {
            "IDL:ModifiedHangman/ClientCallback:1.0"};

    public String[] _ids ()
    {
        return (String[])__ids.clone ();
    }

    private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
    {
        String str = s.readUTF ();
//     com.sun.corba.se.impl.orbutil.IORCheckImpl.check(str, "ModifiedHangman._ClientCallbackStub");
        String[] args = null;
        java.util.Properties props = null;
        org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
        try {
            org.omg.CORBA.Object obj = orb.string_to_object (str);
            org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
            _set_delegate (delegate);
        } finally {
            orb.destroy() ;
        }
    }
}