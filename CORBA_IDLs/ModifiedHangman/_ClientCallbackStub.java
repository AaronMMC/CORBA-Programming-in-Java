package ModifiedHangman;


/**
* ModifiedHangman/_ClientCallbackStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from ModifiedHangman/GameService.idl
* Thursday, May 15, 2025 10:54:55 PM SGT
*/

public class _ClientCallbackStub extends org.omg.CORBA.portable.ObjectImpl implements ModifiedHangman.ClientCallback
{

  public void startRound (int wordLength, int roundNumber)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("startRound", true);
                $out.write_long (wordLength);
                $out.write_long (roundNumber);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                startRound (wordLength, roundNumber        );
            } finally {
                _releaseReply ($in);
            }
  } // startRound

  public void startGameFailed ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("startGameFailed", true);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                startGameFailed (        );
            } finally {
                _releaseReply ($in);
            }
  } // startGameFailed

  public void endGame (ModifiedHangman.GameResult gameResultData)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("endGame", true);
                ModifiedHangman.GameResultHelper.write ($out, gameResultData);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                endGame (gameResultData        );
            } finally {
                _releaseReply ($in);
            }
  } // endGame

  public void endRound (ModifiedHangman.RoundResult roundResultData)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("endRound", true);
                ModifiedHangman.RoundResultHelper.write ($out, roundResultData);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                endRound (roundResultData        );
            } finally {
                _releaseReply ($in);
            }
  } // endRound

  public void proceedToNextRound (int wordLength, int roundNUmber)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("proceedToNextRound", true);
                $out.write_long (wordLength);
                $out.write_long (roundNUmber);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                proceedToNextRound (wordLength, roundNUmber        );
            } finally {
                _releaseReply ($in);
            }
  } // proceedToNextRound

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:ModifiedHangman/ClientCallback:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
//     com.sun.corba.se.impl.orbutil.IORCheckImpl.check(str, "ModifiedHangman._ClientCallbackStub");
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _ClientCallbackStub
