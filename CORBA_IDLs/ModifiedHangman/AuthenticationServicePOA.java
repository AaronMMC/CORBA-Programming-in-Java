package ModifiedHangman;


/**
* ModifiedHangman/AuthenticationServicePOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from ModifiedHangman/AuthenticationService.idl
* Friday, May 16, 2025 12:00:00 AM SGT
*/

public abstract class AuthenticationServicePOA extends org.omg.PortableServer.Servant
 implements ModifiedHangman.AuthenticationServiceOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("login", new java.lang.Integer (0));
    _methods.put ("logout", new java.lang.Integer (1));
    _methods.put ("registerCallback", new java.lang.Integer (2));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // ModifiedHangman/AuthenticationService/login
       {
         try {
           String username = in.read_string ();
           String password = in.read_string ();
           String $result = null;
           $result = this.login (username, password);
           out = $rh.createReply();
           out.write_string ($result);
         } catch (ModifiedHangman.LogInException $ex) {
           out = $rh.createExceptionReply ();
           ModifiedHangman.LogInExceptionHelper.write (out, $ex);
         }
         break;
       }

       case 1:  // ModifiedHangman/AuthenticationService/logout
       {
         try {
           String token = in.read_string ();
           this.logout (token);
           out = $rh.createReply();
         } catch (ModifiedHangman.PlayerNotLoggedInException $ex) {
           out = $rh.createExceptionReply ();
           ModifiedHangman.PlayerNotLoggedInExceptionHelper.write (out, $ex);
         }
         break;
       }

       case 2:  // ModifiedHangman/AuthenticationService/registerCallback
       {
         try {
           ModifiedHangman.ClientCallback callback = ModifiedHangman.ClientCallbackHelper.read (in);
           String token = in.read_string ();
           this.registerCallback (callback, token);
           out = $rh.createReply();
         } catch (ModifiedHangman.PlayerNotLoggedInException $ex) {
           out = $rh.createExceptionReply ();
           ModifiedHangman.PlayerNotLoggedInExceptionHelper.write (out, $ex);
         }
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:ModifiedHangman/AuthenticationService:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public AuthenticationService _this() 
  {
    return AuthenticationServiceHelper.narrow(
    super._this_object());
  }

  public AuthenticationService _this(org.omg.CORBA.ORB orb) 
  {
    return AuthenticationServiceHelper.narrow(
    super._this_object(orb));
  }


} // class AuthenticationServicePOA
