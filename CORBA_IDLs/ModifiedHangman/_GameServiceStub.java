package ModifiedHangman;


/**
* ModifiedHangman/_GameServiceStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from ModifiedHangman/GameService.idl
* Thursday, May 15, 2025 10:54:55 PM SGT
*/

public class _GameServiceStub extends org.omg.CORBA.portable.ObjectImpl implements ModifiedHangman.GameService
{

  public void registerCallback (ModifiedHangman.ClientCallback callback, String token) throws ModifiedHangman.PlayerNotLoggedInException
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("registerCallback", true);
                ModifiedHangman.ClientCallbackHelper.write ($out, callback);
                $out.write_string (token);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:ModifiedHangman/PlayerNotLoggedInException:1.0"))
                    throw ModifiedHangman.PlayerNotLoggedInExceptionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                registerCallback (callback, token        );
            } finally {
                _releaseReply ($in);
            }
  } // registerCallback

  public ModifiedHangman.GameInfo start_game (String username, String token) throws ModifiedHangman.PlayerNotLoggedInException
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("start_game", true);
                $out.write_string (username);
                $out.write_string (token);
                $in = _invoke ($out);
                ModifiedHangman.GameInfo $result = ModifiedHangman.GameInfoHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:ModifiedHangman/PlayerNotLoggedInException:1.0"))
                    throw ModifiedHangman.PlayerNotLoggedInExceptionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return start_game (username, token        );
            } finally {
                _releaseReply ($in);
            }
  } // start_game

  public ModifiedHangman.GuessResponse guessLetter (String username, String gameId, char letter, String token) throws ModifiedHangman.GameNotFoundException, ModifiedHangman.PlayerNotLoggedInException
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("guessLetter", true);
                $out.write_string (username);
                $out.write_string (gameId);
                $out.write_char (letter);
                $out.write_string (token);
                $in = _invoke ($out);
                ModifiedHangman.GuessResponse $result = ModifiedHangman.GuessResponseHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:ModifiedHangman/GameNotFoundException:1.0"))
                    throw ModifiedHangman.GameNotFoundExceptionHelper.read ($in);
                else if (_id.equals ("IDL:ModifiedHangman/PlayerNotLoggedInException:1.0"))
                    throw ModifiedHangman.PlayerNotLoggedInExceptionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return guessLetter (username, gameId, letter, token        );
            } finally {
                _releaseReply ($in);
            }
  } // guessLetter

  public ModifiedHangman.Leaderboard get_leaderboard (String token) throws ModifiedHangman.PlayerNotLoggedInException
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("get_leaderboard", true);
                $out.write_string (token);
                $in = _invoke ($out);
                ModifiedHangman.Leaderboard $result = ModifiedHangman.LeaderboardHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:ModifiedHangman/PlayerNotLoggedInException:1.0"))
                    throw ModifiedHangman.PlayerNotLoggedInExceptionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return get_leaderboard (token        );
            } finally {
                _releaseReply ($in);
            }
  } // get_leaderboard

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:ModifiedHangman/GameService:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
//     com.sun.corba.se.impl.orbutil.IORCheckImpl.check(str, "ModifiedHangman._GameServiceStub");
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _GameServiceStub
